// <auto-generated />
using System;
using Example.MultiTenantData.DA.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Example.MultiTenantData.DA.EF.Deploy.Migrations
{
    [DbContext(typeof(MtDbContext))]
    [Migration("20240628145212_AddDefaultData")]
    partial class AddDefaultData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("exmt")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Example.MultiTenantData.DA.Entities.ReferenceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ReferenceEntity", "exmt");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e065b699-0e9c-493a-80dd-c8efec0eb2ca"),
                            Name = "Reference Item 1"
                        },
                        new
                        {
                            Id = new Guid("1429f2ed-05ee-465c-a37a-e77537d98b21"),
                            Name = "Reference Item 2"
                        });
                });

            modelBuilder.Entity("Example.MultiTenantData.DA.Entities.SegregatedEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ReferenceEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceEntityId");

                    b.ToTable("SegregatedEntity", "exmt");

                    b.HasData(
                        new
                        {
                            Id = new Guid("408ecb1e-fed7-4b37-977a-97f1709bb3f5"),
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Segregated Entity 1",
                            ReferenceEntityId = new Guid("e065b699-0e9c-493a-80dd-c8efec0eb2ca"),
                            TenantId = "tenanta"
                        },
                        new
                        {
                            Id = new Guid("816d9651-cb1f-44d3-adb7-d8372451bbb7"),
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Segregated Entity 2",
                            ReferenceEntityId = new Guid("1429f2ed-05ee-465c-a37a-e77537d98b21"),
                            TenantId = "tenanta"
                        },
                        new
                        {
                            Id = new Guid("9d6bffc6-7afa-43f7-8d40-1fd8679fe046"),
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Segregated Entity 3",
                            ReferenceEntityId = new Guid("e065b699-0e9c-493a-80dd-c8efec0eb2ca"),
                            TenantId = "tenantb"
                        },
                        new
                        {
                            Id = new Guid("361976b4-2542-49c6-988f-49de24b64ac9"),
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Segregated Entity 4",
                            ReferenceEntityId = new Guid("1429f2ed-05ee-465c-a37a-e77537d98b21"),
                            TenantId = "tenantc"
                        });
                });

            modelBuilder.Entity("Example.MultiTenantData.DA.Entities.SegregatedEntity", b =>
                {
                    b.HasOne("Example.MultiTenantData.DA.Entities.ReferenceEntity", "ReferenceEntity")
                        .WithMany("SegregatedEntities")
                        .HasForeignKey("ReferenceEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReferenceEntity");
                });

            modelBuilder.Entity("Example.MultiTenantData.DA.Entities.ReferenceEntity", b =>
                {
                    b.Navigation("SegregatedEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
